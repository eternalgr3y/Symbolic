============================= test session starts =============================
platform win32 -- Python 3.12.8, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\Todd\Projects\symbolic_agi\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Todd\Projects\symbolic_agi
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, cov-6.2.1, timeout-2.4.0, xdist-3.8.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 94 items

symbolic_agi/tests/test_agent.py::TestAgent::test_browser_action ERROR   [  1%]
symbolic_agi/tests/test_agent.py::TestAgent::test_skill_review_efficiency ERROR [  2%]
symbolic_agi/tests/test_agent.py::TestAgent::test_agent_initialization FAILED [  3%]
symbolic_agi/tests/test_agent.py::TestAgent::test_agent_with_invalid_skill ERROR [  4%]
symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_agi_initialization_and_emotional_state PASSED [  5%]
symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_database_concurrency PASSED [  6%]
symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_memory_system_exists PASSED [  7%]
symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_skill_manager_database_safety PASSED [  8%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_state_initialization FAILED [  9%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_process_experience PASSED [ 10%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_regulation PASSED [ 11%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection FAILED [ 12%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_influence_on_decisions FAILED [ 13%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_curiosity_state PASSED [ 14%]
symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_consciousness_state_dict PASSED [ 15%]
symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_initialization PASSED [ 17%]
symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_to_dict PASSED [ 18%]
symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_from_dict PASSED [ 19%]
symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_emotional_state_persistence PASSED [ 20%]
symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_frustration PASSED [ 21%]
symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_anxiety PASSED [ 22%]
symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_update_emotional_state_success PASSED [ 23%]
symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_inner_monologue PASSED [ 24%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast FAILED [ 25%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_integration FAILED [ 26%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning FAILED [ 27%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success FAILED [ 28%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation FAILED [ 29%]
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time FAILED [ 30%]
symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_allows_safe_action PASSED [ 31%]
symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_blocks_dangerous_action PASSED [ 32%]
symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_blocks_harmful_keywords PASSED [ 34%]
symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_allows_benign_keywords PASSED [ 35%]
symbolic_agi/tests/test_integration.py::test_agi XFAIL ([NOTRUN] Tes...) [ 36%]
symbolic_agi/tests/test_integration.py::test_create_goal_via_api ERROR   [ 37%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_state_affects_planning PASSED [ 38%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_trust_momentum_affects_agent_selection FAILED [ 39%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_context_affects_ethical_evaluation FAILED [ 40%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_execution_updates_emotional_state FAILED [ 41%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_plan_failure_handling_with_emotional_regulation FAILED [ 42%]
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_complete_autonomous_cycle_with_integration FAILED [ 43%]
symbolic_agi/tests/test_integration_fixes.py::test_full_system_with_fixes PASSED [ 44%]
symbolic_agi/tests/test_integration_fixes.py::test_error_recovery PASSED [ 45%]
symbolic_agi/tests/test_meta_cognition.py::test_meta_cognition_basic PASSED [ 46%]
symbolic_agi/tests/test_meta_cognition.py::test_generate_goal_from_drives_mock PASSED [ 47%]
symbolic_agi/tests/test_micro_world.py::test_world_initialization PASSED [ 48%]
symbolic_agi/tests/test_micro_world.py::test_action_move_success PASSED  [ 50%]
symbolic_agi/tests/test_micro_world.py::test_action_move_fail_no_exit PASSED [ 51%]
symbolic_agi/tests/test_micro_world.py::test_action_pickup_and_drop PASSED [ 52%]
symbolic_agi/tests/test_micro_world.py::test_action_open_chest_with_key PASSED [ 53%]
symbolic_agi/tests/test_micro_world.py::test_state_persistence PASSED    [ 54%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security FAILED [ 55%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic FAILED [ 56%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed FAILED [ 57%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout FAILED [ 58%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement FAILED [ 59%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browse_webpage_security FAILED [ 60%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval FAILED [ 61%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation FAILED [ 62%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_data FAILED [ 63%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration FAILED [ 64%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization FAILED [ 65%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization FAILED [ 67%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory FAILED [ 68%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details FAILED [ 69%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found FAILED [ 70%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention FAILED [ 71%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection FAILED [ 72%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code FAILED [ 73%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime FAILED [ 74%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security FAILED [ 75%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security FAILED [ 76%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning FAILED [ 77%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities FAILED [ 78%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan FAILED [ 79%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method FAILED [ 80%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill FAILED [ 81%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found FAILED [ 82%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph FAILED [ 84%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent FAILED [ 85%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard FAILED [ 86%]
symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access FAILED [ 87%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security FAILED [ 88%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories FAILED [ 89%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout FAILED [ 90%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output FAILED [ 91%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods FAILED [ 92%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security FAILED [ 93%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory FAILED [ 94%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure FAILED [ 95%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files FAILED [ 96%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations FAILED [ 97%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation FAILED [ 98%]
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info FAILED [100%]

=================================== ERRORS ====================================
_______________ ERROR at setup of TestAgent.test_browser_action _______________

self = <test_agent.TestAgent object at 0x00000200BD037920>

    @pytest.fixture
    def agent_setup(self):
        """Setup a test agent with mocked dependencies"""
>       agent = Agent()
                ^^^^^^^
E       TypeError: Agent.__init__() missing 3 required positional arguments: 'name', 'message_bus', and 'api_client'

symbolic_agi\tests\test_agent.py:10: TypeError
__________ ERROR at setup of TestAgent.test_skill_review_efficiency ___________

self = <test_agent.TestAgent object at 0x00000200BE3C4830>

    @pytest.fixture
    def agent_setup(self):
        """Setup a test agent with mocked dependencies"""
>       agent = Agent()
                ^^^^^^^
E       TypeError: Agent.__init__() missing 3 required positional arguments: 'name', 'message_bus', and 'api_client'

symbolic_agi\tests\test_agent.py:10: TypeError
__________ ERROR at setup of TestAgent.test_agent_with_invalid_skill __________

self = <test_agent.TestAgent object at 0x00000200BE3C52E0>

    @pytest.fixture
    def agent_setup(self):
        """Setup a test agent with mocked dependencies"""
>       agent = Agent()
                ^^^^^^^
E       TypeError: Agent.__init__() missing 3 required positional arguments: 'name', 'message_bus', and 'api_client'

symbolic_agi\tests\test_agent.py:10: TypeError
_________________ ERROR at setup of test_create_goal_via_api __________________
file C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\tests\test_integration.py, line 63
  @pytest.mark.asyncio
  async def test_create_goal_via_api(client: AsyncClient, test_agi: SymbolicAGI) -> None:
      """
      Integration Test: Submits a goal via the API and verifies it's planned.
      """
      # 1. Define the goal
      goal_description = "Write a python script to output hello world"

      # 2. Submit the goal to the running application via the test client
      response = await client.post("/goal", json={"description": goal_description})

      # 3. Assert that the API accepted the request
      assert response.status_code == 202
      response_data = response.json()
      assert response_data["status"] == "accepted"
      goal_id = response_data["goal_id"]

      # Give the AGI's event loop more time to process the goal
      await asyncio.sleep(0.5)  # Increase wait time

      # Wait until the goal appears in memory or 1 s max.
      for _ in range(10):
          goal = await test_agi.ltm.get_goal_by_id(goal_id)
          if goal:
              break
          await asyncio.sleep(0.1)

      # 4. Verify the goal was added to Long-Term Memory
      goal = await test_agi.ltm.get_goal_by_id(goal_id)
      assert goal is not None
      assert goal.description == goal_description

      # 5. Simulate autonomous cycles until our goal gets processed or we timeout
      max_cycles = 5
      plan_created = False

      for cycle in range(max_cycles):
          result = await test_agi.execution_unit.handle_autonomous_cycle()
          print(f"Cycle {cycle + 1} result: {result}")

          # Check if our specific goal got a plan
          updated_goal = await test_agi.ltm.get_goal_by_id(goal_id)
          if updated_goal and len(updated_goal.sub_tasks) > 0:
              plan_created = True
              break

          await asyncio.sleep(0.2)  # Small delay between cycles

      # 6. Verify that our goal now has a plan (sub_tasks)
      updated_goal = await test_agi.ltm.get_goal_by_id(goal_id)
      assert updated_goal is not None

      if plan_created:
          assert len(updated_goal.sub_tasks) > 0
          print(f"Goal '{goal_id}' successfully got a plan with {len(updated_goal.sub_tasks)} steps")
      else:
          # The goal might have failed due to planner issues, but that's still a valid integration test
          # The important thing is that the goal was successfully added to LTM and the system processed it
          print(f"Goal '{goal_id}' was processed (status: {updated_goal.status})")
          if updated_goal.last_failure:
              print(f"Goal failure reason: {updated_goal.last_failure}")
          assert updated_goal.status in ["active", "pending", "failed"]  # Goal should be in a valid state
E       fixture 'client' not found
>       available fixtures: _class_event_loop, _function_event_loop, _module_event_loop, _package_event_loop, _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, cleanup_after_test, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_agi, mock_api_client, monkeypatch, no_cover, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, temp_workspace, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
>       use 'pytest --fixtures [testpath]' for help on them.

C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\tests\test_integration.py:63
================================== FAILURES ===================================
_____________________ TestAgent.test_agent_initialization _____________________

self = <test_agent.TestAgent object at 0x00000200BE3C50D0>

    @pytest.mark.asyncio
    async def test_agent_initialization(self):
        """Test that agent initializes properly"""
>       agent = Agent()
                ^^^^^^^
E       TypeError: Agent.__init__() missing 3 required positional arguments: 'name', 'message_bus', and 'api_client'

symbolic_agi\tests\test_agent.py:63: TypeError
____________ TestConsciousness.test_emotional_state_initialization ____________

self = <test_consciousness.TestConsciousness object at 0x000002018EEAC1A0>
consciousness_setup = <symbolic_agi.consciousness.Consciousness object at 0x000002018F758200>

    @pytest.mark.asyncio
    async def test_emotional_state_initialization(self, consciousness_setup):
        """Test emotional state initializes with correct defaults"""
        consciousness = consciousness_setup
        state = consciousness.emotional_state
    
        assert 0 <= state.frustration <= 1
        assert 0 <= state.confidence <= 1
        assert 0 <= state.anxiety <= 1
        assert 0 <= state.excitement <= 1
>       assert hasattr(state, 'curiosity')
E       AssertionError: assert False
E        +  where False = hasattr(<symbolic_agi.consciousness.EmotionalState object at 0x000002018F7582C0>, 'curiosity')

symbolic_agi\tests\test_consciousness.py:24: AssertionError
---------------------------- Captured log teardown ----------------------------
ERROR    asyncio:base_events.py:1826 Task was destroyed but it is pending!
task: <Task pending name='Task-51' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future finished result=True>>
_______________ TestConsciousness.test_metacognitive_reflection _______________

self = <test_consciousness.TestConsciousness object at 0x000002018EEAC950>
consciousness_setup = <symbolic_agi.consciousness.Consciousness object at 0x000002018F759220>

    @pytest.mark.asyncio
    async def test_metacognitive_reflection(self, consciousness_setup):
        """Test metacognitive reflection"""
        consciousness = consciousness_setup
    
        # Check if consciousness has necessary attributes
        assert hasattr(consciousness, 'emotional_state')
>       assert hasattr(consciousness, 'perceive')
E       AssertionError: assert False
E        +  where False = hasattr(<symbolic_agi.consciousness.Consciousness object at 0x000002018F759220>, 'perceive')

symbolic_agi\tests\test_consciousness.py:81: AssertionError
---------------------------- Captured log teardown ----------------------------
ERROR    asyncio:base_events.py:1826 Task was destroyed but it is pending!
task: <Task pending name='Task-20' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future finished result=True>>
ERROR    asyncio:base_events.py:1826 Task was destroyed but it is pending!
task: <Task pending name='Task-7' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future finished result=True>>
___________ TestConsciousness.test_emotional_influence_on_decisions ___________

self = <test_consciousness.TestConsciousness object at 0x000002018EEACBF0>
consciousness_setup = <symbolic_agi.consciousness.Consciousness object at 0x000002018F1FDF40>

    @pytest.mark.asyncio
    async def test_emotional_influence_on_decisions(self, consciousness_setup):
        """Test emotions influence decision-making"""
        consciousness = consciousness_setup
    
        # High anxiety should lead to cautious decisions
        consciousness.emotional_state.anxiety = 0.8
        consciousness.emotional_state.confidence = 0.3
    
        # Test perception with high anxiety
>       perception = await consciousness.perceive({"situation": "risky"})
                           ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'Consciousness' object has no attribute 'perceive'

symbolic_agi\tests\test_consciousness.py:97: AttributeError
_ TestEmotionalIntegration.test_frustration_builds_on_repeated_rejection_fast _

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAE930>
mock_agi = <coroutine object mock_agi at 0x000002018F1CE180>

    @pytest.mark.asyncio
    async def test_frustration_builds_on_repeated_rejection_fast(self, mock_agi):
        """Test frustration building - using mock for speed"""
>       initial_frustration = mock_agi.consciousness.emotional_state.frustration
                              ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'coroutine' object has no attribute 'consciousness'

symbolic_agi\tests\test_emotional_integration.py:12: AttributeError
_ TestEmotionalIntegration.test_frustration_builds_on_repeated_rejection_integration _

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAEC90>

    @pytest.mark.asyncio
    @pytest.mark.slow  # Mark slow tests so they can be skipped with pytest -m "not slow"
    async def test_frustration_builds_on_repeated_rejection_integration(self):
        """Integration test - only run when needed"""
        print("\nStarting integration test...")
        start_time = time.time()
    
        with tempfile.TemporaryDirectory() as tmpdir:
            print(f"Creating AGI instance... (elapsed: {time.time() - start_time:.2f}s)")
>           agi = await SymbolicAGI.create(
                name="TestAGI",
                workspace_dir=tmpdir,
                use_local_models=True
            )
E           TypeError: SymbolicAGI.create() got an unexpected keyword argument 'name'

symbolic_agi\tests\test_emotional_integration.py:32: TypeError
---------------------------- Captured stdout call -----------------------------

Starting integration test...
Creating AGI instance... (elapsed: 0.00s)
_______ TestEmotionalIntegration.test_emotional_state_affects_planning ________

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAEF00>
mock_agi = <coroutine object mock_agi at 0x000002018F788900>

    @pytest.mark.asyncio
    async def test_emotional_state_affects_planning(self, mock_agi):
        """Test that emotional state affects planning decisions"""
        # Test with high anxiety
>       mock_agi.consciousness.emotional_state.anxiety = 0.8
        ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'coroutine' object has no attribute 'consciousness'

symbolic_agi\tests\test_emotional_integration.py:57: AttributeError
_______ TestEmotionalIntegration.test_excitement_increases_with_success _______

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAF170>
mock_agi = <coroutine object mock_agi at 0x000002018F788820>

    @pytest.mark.asyncio
    async def test_excitement_increases_with_success(self, mock_agi):
        """Test that excitement increases with successful outcomes"""
>       initial_excitement = mock_agi.consciousness.emotional_state.excitement
                             ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'coroutine' object has no attribute 'consciousness'

symbolic_agi\tests\test_emotional_integration.py:80: AttributeError
_____________ TestEmotionalIntegration.test_emotional_regulation ______________

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAF410>
mock_agi = <coroutine object mock_agi at 0x000002018F789540>

    @pytest.mark.asyncio
    async def test_emotional_regulation(self, mock_agi):
        """Test emotional regulation prevents extreme states"""
        # Set extreme emotional states
>       mock_agi.consciousness.emotional_state.frustration = 0.95
        ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'coroutine' object has no attribute 'consciousness'

symbolic_agi\tests\test_emotional_integration.py:96: AttributeError
___________ TestEmotionalIntegration.test_emotional_decay_over_time ___________

self = <test_emotional_integration.TestEmotionalIntegration object at 0x000002018EEAF6B0>
mock_agi = <coroutine object mock_agi at 0x000002018F78A260>

    @pytest.mark.asyncio
    async def test_emotional_decay_over_time(self, mock_agi):
        """Test that strong emotions decay over time"""
        # Set high frustration
>       mock_agi.consciousness.emotional_state.frustration = 0.8
        ^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'coroutine' object has no attribute 'consciousness'

symbolic_agi\tests\test_emotional_integration.py:116: AttributeError
_____ TestCompleteIntegration.test_trust_momentum_affects_agent_selection _____
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
__ TestCompleteIntegration.test_emotional_context_affects_ethical_evaluation __
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
_______ TestCompleteIntegration.test_execution_updates_emotional_state ________
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
_ TestCompleteIntegration.test_plan_failure_handling_with_emotional_regulation _
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
___ TestCompleteIntegration.test_complete_autonomous_cycle_with_integration ___
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
__________________ TestToolPlugin.test_file_access_security ___________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F18FAA0>
tool_setup = <async_generator object tool_setup at 0x000002018FC8B5A0>

    @pytest.mark.asyncio
    async def test_file_access_security(self, tool_setup):
        """Test that file access is restricted to workspace."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:42: TypeError
____________________ TestToolPlugin.test_write_file_basic _____________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F18FDA0>
tool_setup = <async_generator object tool_setup at 0x000002018FCD17E0>

    @pytest.mark.asyncio
    async def test_write_file_basic(self, tool_setup):
        """Test basic file writing functionality."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:56: TypeError
______________ TestToolPlugin.test_execute_python_code_sandboxed ______________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0080>
tool_setup = <async_generator object tool_setup at 0x000002018FCD18C0>

    @pytest.mark.asyncio
    async def test_execute_python_code_sandboxed(self, tool_setup):
        """Test that Python code execution is properly sandboxed."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:72: TypeError
_______________ TestToolPlugin.test_execute_python_code_timeout _______________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0320>
tool_setup = <async_generator object tool_setup at 0x000002018FD60660>

    @pytest.mark.asyncio
    async def test_execute_python_code_timeout(self, tool_setup):
        """Test code execution timeout."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:88: TypeError
________________ TestToolPlugin.test_url_whitelist_enforcement ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C05C0>
tool_setup = <async_generator object tool_setup at 0x000002018FD60580>

    @pytest.mark.asyncio
    async def test_url_whitelist_enforcement(self, tool_setup):
        """Test that URL whitelist is enforced."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:101: TypeError
_________________ TestToolPlugin.test_browse_webpage_security _________________
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
___________ TestToolPlugin.test_code_modification_requires_approval ___________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F18FC80>
tool_setup = <async_generator object tool_setup at 0x000002018FD627A0>

    @pytest.mark.asyncio
    async def test_code_modification_requires_approval(self, tool_setup):
        """Test that code modifications require safety evaluation."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:140: TypeError
______________ TestToolPlugin.test_create_skill_with_validation _______________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0770>
tool_setup = <async_generator object tool_setup at 0x000002018FD62880>

    @pytest.mark.asyncio
    async def test_create_skill_with_validation(self, tool_setup):
        """Test skill creation with ethical validation."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:167: TypeError
______________________ TestToolPlugin.test_analyze_data _______________________
async def functions are not natively supported.
You need to install a suitable plugin for your async framework, for example:
  - anyio
  - pytest-asyncio
  - pytest-tornasync
  - pytest-trio
  - pytest-twisted
________________ TestToolPlugin.test_explain_skill_integration ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0AD0>
tool_setup = <async_generator object tool_setup at 0x000002018FD4C2E0>

    @pytest.mark.asyncio
    async def test_explain_skill_integration(self, tool_setup):
        """Test skill explanation with memory integration."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:205: TypeError
________ TestToolPlugin.test_browser_operations_require_initialization ________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0DA0>
tool_setup = <async_generator object tool_setup at 0x000002018FD63A00>

    @pytest.mark.asyncio
    async def test_browser_operations_require_initialization(self, tool_setup):
        """Test browser operations fail gracefully without browser."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:232: TypeError
___________________ TestToolPlugin.test_tool_initialization ___________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C1040>
tool_setup = <async_generator object tool_setup at 0x000002018FD4C200>

    @pytest.mark.asyncio
    async def test_tool_initialization(self, tool_setup):
        """Test that tool plugin initializes correctly."""
>       tool, mock_agi, temp_dir = tool_setup
        ^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:245: TypeError
_____________________ TestToolPlugin.test_list_directory ______________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C12E0>
tool_setup = <async_generator object tool_setup at 0x000002018FD63AE0>

    @pytest.mark.asyncio
    async def test_list_directory(self, tool_setup):
        """Test listing files in directory."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:257: TypeError
____________________ TestToolPlugin.test_get_skill_details ____________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C1580>
tool_setup = <async_generator object tool_setup at 0x000002018FD60820>

    @pytest.mark.asyncio
    async def test_get_skill_details(self, tool_setup):
        """Test getting skill details."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:274: TypeError
_______________ TestToolPlugin.test_get_skill_details_not_found _______________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C1820>
tool_setup = <async_generator object tool_setup at 0x000002018FD61FC0>

    @pytest.mark.asyncio
    async def test_get_skill_details_not_found(self, tool_setup):
        """Test getting details for non-existent skill."""
>       tool, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:299: TypeError
________________ TestToolPlugin.test_path_traversal_prevention ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C1AC0>
tool_setup = <async_generator object tool_setup at 0x000002018FD62CE0>

    @pytest.mark.asyncio
    async def test_path_traversal_prevention(self, tool_setup):
        """Test that path traversal attacks are prevented."""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:315: TypeError
___________________ TestToolPlugin.test_symlink_protection ____________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C1D60>
tool_setup = <async_generator object tool_setup at 0x000002018FD617E0>

    @pytest.mark.asyncio
    async def test_symlink_protection(self, tool_setup):
        """Test that symlink attacks are prevented"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:331: TypeError
__________________ TestToolPlugin.test_read_own_source_code ___________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2000>
tool_setup = <async_generator object tool_setup at 0x000002018FCD3AE0>

    @pytest.mark.asyncio
    async def test_read_own_source_code(self, tool_setup):
        """Test reading own source code functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:340: TypeError
__________________ TestToolPlugin.test_get_current_datetime ___________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C22A0>
tool_setup = <async_generator object tool_setup at 0x000002018FCD3CA0>

    @pytest.mark.asyncio
    async def test_get_current_datetime(self, tool_setup):
        """Test datetime retrieval functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:350: TypeError
_________________ TestToolPlugin.test_read_core_file_security _________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2540>
tool_setup = <async_generator object tool_setup at 0x000002018FC8A340>

    @pytest.mark.asyncio
    async def test_read_core_file_security(self, tool_setup):
        """Test that core file reading has proper security"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:360: TypeError
___________________ TestToolPlugin.test_web_search_security ___________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C27E0>
tool_setup = <async_generator object tool_setup at 0x000002018FD4D620>

    @pytest.mark.asyncio
    async def test_web_search_security(self, tool_setup):
        """Test web search with security constraints"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:373: TypeError
_______________ TestToolPlugin.test_chain_of_thought_reasoning ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2A80>
tool_setup = <async_generator object tool_setup at 0x000002018FD4C3C0>

    @pytest.mark.asyncio
    async def test_chain_of_thought_reasoning(self, tool_setup):
        """Test chain of thought reasoning functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:387: TypeError
________________ TestToolPlugin.test_analyze_self_capabilities ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2C00>
tool_setup = <async_generator object tool_setup at 0x000002018FD4E260>

    @pytest.mark.asyncio
    async def test_analyze_self_capabilities(self, tool_setup):
        """Test self-capability analysis"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:403: TypeError
_______________________ TestToolPlugin.test_review_plan _______________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C26F0>
tool_setup = <async_generator object tool_setup at 0x000002018FD4EF80>

    @pytest.mark.asyncio
    async def test_review_plan(self, tool_setup):
        """Test plan review functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:413: TypeError
______________________ TestToolPlugin.test_craft_method _______________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2060>
tool_setup = <async_generator object tool_setup at 0x000002018FD4F060>

    @pytest.mark.asyncio
    async def test_craft_method(self, tool_setup):
        """Test craft method functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:430: TypeError
______________________ TestToolPlugin.test_update_skill _______________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C19D0>
tool_setup = <async_generator object tool_setup at 0x000002018FD4CD60>

    @pytest.mark.asyncio
    async def test_update_skill(self, tool_setup):
        """Test skill update functionality"""
>       tool_instance, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:447: TypeError
_________________ TestToolPlugin.test_update_skill_not_found __________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C13A0>
tool_setup = <async_generator object tool_setup at 0x000002018FD4E340>

    @pytest.mark.asyncio
    async def test_update_skill_not_found(self, tool_setup):
        """Test skill update when skill doesn't exist"""
>       tool_instance, mock_agi, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:469: TypeError
_________________ TestToolPlugin.test_manage_knowledge_graph __________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0C80>
tool_setup = <async_generator object tool_setup at 0x000002018FD4D620>

    @pytest.mark.asyncio
    async def test_manage_knowledge_graph(self, tool_setup):
        """Test knowledge graph management"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:485: TypeError
_____________________ TestToolPlugin.test_provision_agent _____________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C0680>
tool_setup = <async_generator object tool_setup at 0x000002018FC88C80>

    @pytest.mark.asyncio
    async def test_provision_agent(self, tool_setup):
        """Test agent provisioning functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:503: TypeError
________________ TestToolPlugin.test_show_monitoring_dashboard ________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C2F00>
tool_setup = <async_generator object tool_setup at 0x000002018FCD1000>

    @pytest.mark.asyncio
    async def test_show_monitoring_dashboard(self, tool_setup):
        """Test monitoring dashboard functionality"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:519: TypeError
____________________ TestToolPlugin.test_manage_web_access ____________________

self = <test_tool_plugin.TestToolPlugin object at 0x000002018F1C31A0>
tool_setup = <async_generator object tool_setup at 0x000002018FCD3AE0>

    @pytest.mark.asyncio
    async def test_manage_web_access(self, tool_setup):
        """Test web access management"""
>       tool_instance, _, _ = tool_setup
        ^^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin.py:529: TypeError
_____________ TestToolPluginComprehensive.test_read_file_security _____________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FD070>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD61700>

    @pytest.mark.asyncio
    async def test_read_file_security(self, tool_setup):
        """Test file read security measures"""
>       tool, _, workspace = tool_setup
        ^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:27: TypeError
_______ TestToolPluginComprehensive.test_write_file_creates_directories _______

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FD310>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD62CE0>

    @pytest.mark.asyncio
    async def test_write_file_creates_directories(self, tool_setup):
        """Test write_file creates parent directories"""
>       tool, _, workspace = tool_setup
        ^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:48: TypeError
___________ TestToolPluginComprehensive.test_execute_python_timeout ___________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FD5B0>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD63760>

    @pytest.mark.asyncio
    async def test_execute_python_timeout(self, tool_setup):
        """Test Python code execution with timeout"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:68: TypeError
_______ TestToolPluginComprehensive.test_execute_python_captures_output _______

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FCF50>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD63D80>

    @pytest.mark.asyncio
    async def test_execute_python_captures_output(self, tool_setup):
        """Test Python execution captures all output"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:85: TypeError
____________ TestToolPluginComprehensive.test_api_request_methods _____________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FD8B0>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD64C80>

    @pytest.mark.asyncio
    async def test_api_request_methods(self, tool_setup):
        """Test various HTTP methods for API requests"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:105: TypeError
___________ TestToolPluginComprehensive.test_shell_command_security ___________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FDB50>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD619A0>

    @pytest.mark.asyncio
    async def test_shell_command_security(self, tool_setup):
        """Test shell command execution security"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:132: TypeError
_______________ TestToolPluginComprehensive.test_list_directory _______________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FDDF0>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD63920>

    @pytest.mark.asyncio
    async def test_list_directory(self, tool_setup):
        """Test directory listing functionality"""
>       tool, _, workspace = tool_setup
        ^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:149: TypeError
___________ TestToolPluginComprehensive.test_analyze_code_structure ___________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FE090>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD60BA0>

    @pytest.mark.asyncio
    async def test_analyze_code_structure(self, tool_setup):
        """Test code structure analysis"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:174: TypeError
______________ TestToolPluginComprehensive.test_search_in_files _______________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FE360>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FD60040>

    @pytest.mark.asyncio
    async def test_search_in_files(self, tool_setup):
        """Test file search functionality"""
>       tool, _, workspace = tool_setup
        ^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:203: TypeError
_______________ TestToolPluginComprehensive.test_git_operations _______________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FE630>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FCD3920>

    @pytest.mark.asyncio
    async def test_git_operations(self, tool_setup):
        """Test git operations"""
>       tool, _, workspace = tool_setup
        ^^^^^^^^^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:232: TypeError
______________ TestToolPluginComprehensive.test_json_validation _______________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FE900>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FCD3140>

    @pytest.mark.asyncio
    async def test_json_validation(self, tool_setup):
        """Test JSON validation and parsing"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:249: TypeError
______________ TestToolPluginComprehensive.test_environment_info ______________

self = <test_tool_plugin_comprehensive.TestToolPluginComprehensive object at 0x000002018F1FEBD0>
tool_setup = <async_generator object TestToolPluginComprehensive.tool_setup at 0x000002018FC88C80>

    @pytest.mark.asyncio
    async def test_environment_info(self, tool_setup):
        """Test environment information gathering"""
>       tool, _, _ = tool_setup
        ^^^^^^^^^^
E       TypeError: cannot unpack non-iterable async_generator object

symbolic_agi\tests\test_tool_plugin_comprehensive.py:266: TypeError
============================== warnings summary ===============================
venv\Lib\site-packages\faiss\loader.py:49
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\faiss\loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.
    from numpy.core._multiarray_umath import __cpu_features__

symbolic_agi\tests\test_emotional_integration.py:24
  C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\tests\test_emotional_integration.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.slow  # Mark slow tests so they can be skipped with pytest -m "not slow"

symbolic_agi\run_agi.py:63
  C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\run_agi.py:63: DeprecationWarning: 
          on_event is deprecated, use lifespan event handlers instead.
  
          Read more about it in the
          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
          
    @app.on_event("startup")

venv\Lib\site-packages\fastapi\applications.py:4495
venv\Lib\site-packages\fastapi\applications.py:4495
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\fastapi\applications.py:4495: DeprecationWarning: 
          on_event is deprecated, use lifespan event handlers instead.
  
          Read more about it in the
          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
          
    return self.router.on_event(event_type)

symbolic_agi\run_agi.py:104
  C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\run_agi.py:104: DeprecationWarning: 
          on_event is deprecated, use lifespan event handlers instead.
  
          Read more about it in the
          [FastAPI docs for Lifespan Events](https://fastapi.tiangolo.com/advanced/events/).
          
    @app.on_event("shutdown")

symbolic_agi\tests\test_integration.py:18
  symbolic_agi\tests\test_integration.py:18: PytestCollectionWarning: Tests based on asynchronous generators are not supported. test_agi will be ignored.
    @pytest.mark.asyncio

symbolic_agi/tests/test_agent.py::TestAgent::test_browser_action
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_browser_action' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_agent.py::TestAgent::test_skill_review_efficiency
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_skill_review_efficiency' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_agent.py::TestAgent::test_agent_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_agent_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_agent.py::TestAgent::test_agent_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_agent_initialization' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_agent.py::TestAgent::test_agent_with_invalid_skill
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_agent_with_invalid_skill' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_agi_initialization_and_emotional_state
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_agi_initialization_and_emotional_state' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_agi_initialization_and_emotional_state
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_agi_initialization_and_emotional_state' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_database_concurrency
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_database_concurrency' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_database_concurrency
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_database_concurrency' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_memory_system_exists
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_memory_system_exists' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_memory_system_exists
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_memory_system_exists' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_skill_manager_database_safety
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_skill_manager_database_safety' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_skill_manager_database_safety
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_skill_manager_database_safety' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_bug_fixes.py::TestCriticalBugFixes::test_skill_manager_database_safety
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018F6CD9A0>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_state_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_state_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_state_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_state_initialization' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_state_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018F6CE960>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_process_experience
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_process_experience' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_process_experience
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_process_experience' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_regulation
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_regulation' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_regulation
symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_regulation' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_metacognitive_reflection' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_metacognitive_reflection' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018F32B760>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018F32AC00>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_influence_on_decisions
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_influence_on_decisions' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_influence_on_decisions
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_influence_on_decisions' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_curiosity_state
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_curiosity_state' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_curiosity_state
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_curiosity_state' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_consciousness_state_dict
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_consciousness_state_dict' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_consciousness_state_dict
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_consciousness_state_dict' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_to_dict
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_to_dict' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestEmotionalState::test_from_dict
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_from_dict' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_emotional_state_persistence
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_state_persistence' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_emotional_state_persistence
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_state_persistence' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_frustration
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_regulate_emotional_extremes_frustration' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_frustration
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_regulate_emotional_extremes_frustration' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_anxiety
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_regulate_emotional_extremes_anxiety' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_regulate_emotional_extremes_anxiety
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_regulate_emotional_extremes_anxiety' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_update_emotional_state_success
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_update_emotional_state_success' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_update_emotional_state_success
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_update_emotional_state_success' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_inner_monologue
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_inner_monologue' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_consciousness_emotional.py::TestConsciousnessEmotional::test_inner_monologue
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_inner_monologue' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_frustration_builds_on_repeated_rejection_fast' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_frustration_builds_on_repeated_rejection_fast' requested an async fixture 'mock_agi', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_frustration_builds_on_repeated_rejection_fast' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_frustration_builds_on_repeated_rejection_fast' requested async @pytest.fixture 'mock_agi' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_integration
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_frustration_builds_on_repeated_rejection_integration' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_integration
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_frustration_builds_on_repeated_rejection_integration' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_state_affects_planning
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_state_affects_planning' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_state_affects_planning' requested an async fixture 'mock_agi', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning
symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_state_affects_planning
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_state_affects_planning' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_state_affects_planning' requested async @pytest.fixture 'mock_agi' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_excitement_increases_with_success' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_excitement_increases_with_success' requested an async fixture 'mock_agi', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_excitement_increases_with_success' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_excitement_increases_with_success' requested async @pytest.fixture 'mock_agi' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_regulation' requested an async fixture 'mock_agi', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_regulation' requested async @pytest.fixture 'mock_agi' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_decay_over_time' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_decay_over_time' requested an async fixture 'mock_agi', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_decay_over_time' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_emotional_decay_over_time' requested async @pytest.fixture 'mock_agi' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_allows_safe_action
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_screen_allows_safe_action' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_blocks_dangerous_action
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_screen_blocks_dangerous_action' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_blocks_harmful_keywords
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_screen_blocks_harmful_keywords' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_ethics.py::TestEthicalGovernor::test_screen_allows_benign_keywords
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_screen_allows_benign_keywords' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration.py::test_create_goal_via_api
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_create_goal_via_api' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_trust_momentum_affects_agent_selection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_trust_momentum_affects_agent_selection' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_context_affects_ethical_evaluation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_emotional_context_affects_ethical_evaluation' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_execution_updates_emotional_state
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execution_updates_emotional_state' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_plan_failure_handling_with_emotional_regulation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_plan_failure_handling_with_emotional_regulation' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_complete_autonomous_cycle_with_integration
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_complete_autonomous_cycle_with_integration' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_fixes.py::test_full_system_with_fixes
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_full_system_with_fixes' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_fixes.py::test_full_system_with_fixes
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_full_system_with_fixes' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_integration_fixes.py::test_full_system_with_fixes
symbolic_agi/tests/test_integration_fixes.py::test_error_recovery
  C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:98: DeprecationWarning: Call to deprecated close. (Use aclose() instead) -- Deprecated since version 5.0.1.
    await self.redis_client.close()

symbolic_agi/tests/test_integration_fixes.py::test_error_recovery
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_error_recovery' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_integration_fixes.py::test_error_recovery
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_error_recovery' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_integration_fixes.py::test_error_recovery
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018FC898C0>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_meta_cognition.py::test_meta_cognition_basic
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_meta_cognition_basic' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_meta_cognition.py::test_meta_cognition_basic
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_meta_cognition_basic' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_meta_cognition.py::test_meta_cognition_basic
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018FCD0F20>
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
      await self.ensure_connection(connection)
  GeneratorExit
  
  During handling of the above exception, another exception occurred:
  
  Traceback (most recent call last):
    File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
      await self.redis_client.ping()
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
      conn = self.connection or await pool.get_connection()
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
      async with self._lock:
                 ^^^^^^^^^^
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
      self.release()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
      self._wake_up_first()
    File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
      fut.set_result(True)
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
      self._check_closed()
    File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
      raise RuntimeError('Event loop is closed')
  RuntimeError: Event loop is closed
  
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
    warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))

symbolic_agi/tests/test_meta_cognition.py::test_generate_goal_from_drives_mock
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_generate_goal_from_drives_mock' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_meta_cognition.py::test_generate_goal_from_drives_mock
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_generate_goal_from_drives_mock' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_world_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_world_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_move_success
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_action_move_success' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_move_success
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_action_move_success' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_move_fail_no_exit
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_action_move_fail_no_exit' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_move_fail_no_exit
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_action_move_fail_no_exit' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_pickup_and_drop
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_action_pickup_and_drop' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_pickup_and_drop
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_action_pickup_and_drop' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_open_chest_with_key
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_action_open_chest_with_key' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_action_open_chest_with_key
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_action_open_chest_with_key' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_micro_world.py::test_state_persistence
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_state_persistence' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_file_access_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_file_access_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_file_access_security' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_file_access_security' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_write_file_basic' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_write_file_basic' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_write_file_basic' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_write_file_basic' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_code_sandboxed' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_code_sandboxed' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_code_sandboxed' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_code_sandboxed' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_code_timeout' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_code_timeout' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_code_timeout' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_code_timeout' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_url_whitelist_enforcement' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_url_whitelist_enforcement' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_url_whitelist_enforcement' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_url_whitelist_enforcement' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browse_webpage_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_browse_webpage_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browse_webpage_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_browse_webpage_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_code_modification_requires_approval' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_code_modification_requires_approval' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_code_modification_requires_approval' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_code_modification_requires_approval' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_create_skill_with_validation' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_create_skill_with_validation' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_create_skill_with_validation' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_create_skill_with_validation' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_data
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_data' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_data
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_data' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_explain_skill_integration' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_explain_skill_integration' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_explain_skill_integration' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_explain_skill_integration' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_browser_operations_require_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_browser_operations_require_initialization' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_browser_operations_require_initialization' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_browser_operations_require_initialization' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_tool_initialization' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_tool_initialization' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_tool_initialization' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_tool_initialization' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_list_directory' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_list_directory' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_list_directory' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory
symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_list_directory' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_skill_details' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_skill_details' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_skill_details' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_skill_details' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_skill_details_not_found' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_skill_details_not_found' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_skill_details_not_found' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_skill_details_not_found' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_path_traversal_prevention' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_path_traversal_prevention' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_path_traversal_prevention' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_path_traversal_prevention' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_symlink_protection' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_symlink_protection' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_symlink_protection' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_symlink_protection' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_own_source_code' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_own_source_code' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_own_source_code' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_own_source_code' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_current_datetime' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_get_current_datetime' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_current_datetime' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_get_current_datetime' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_core_file_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_core_file_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_core_file_security' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_core_file_security' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_web_search_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_web_search_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_web_search_security' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_web_search_security' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_chain_of_thought_reasoning' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_chain_of_thought_reasoning' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_chain_of_thought_reasoning' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_chain_of_thought_reasoning' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_self_capabilities' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_self_capabilities' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_analyze_self_capabilities' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_analyze_self_capabilities' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_review_plan' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_review_plan' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_review_plan' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_review_plan' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_craft_method' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_craft_method' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_craft_method' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_craft_method' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_update_skill' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_update_skill' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_update_skill' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_update_skill' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_update_skill_not_found' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_update_skill_not_found' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_update_skill_not_found' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_update_skill_not_found' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_manage_knowledge_graph' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_manage_knowledge_graph' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_manage_knowledge_graph' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_manage_knowledge_graph' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_provision_agent' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_provision_agent' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_provision_agent' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_provision_agent' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_show_monitoring_dashboard' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_show_monitoring_dashboard' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_show_monitoring_dashboard' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_show_monitoring_dashboard' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_manage_web_access' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_manage_web_access' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_manage_web_access' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_manage_web_access' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_file_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_read_file_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_file_security' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_read_file_security' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_write_file_creates_directories' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_write_file_creates_directories' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_write_file_creates_directories' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_write_file_creates_directories' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_timeout' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_timeout' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_timeout' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_timeout' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_captures_output' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_execute_python_captures_output' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_captures_output' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_execute_python_captures_output' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_api_request_methods' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_api_request_methods' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_api_request_methods' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_api_request_methods' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_shell_command_security' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_shell_command_security' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_shell_command_security' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_shell_command_security' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_code_structure' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_analyze_code_structure' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_analyze_code_structure' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_analyze_code_structure' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_search_in_files' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_search_in_files' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_search_in_files' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_search_in_files' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_git_operations' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_git_operations' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_git_operations' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_git_operations' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_json_validation' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_json_validation' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_json_validation' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_json_validation' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_environment_info' requested an async fixture 'cleanup_after_test' with autouse=True, with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info
  C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\fixtures.py:1181: PytestRemovedIn9Warning: 'test_environment_info' requested an async fixture 'tool_setup', with no plugin or hook that handled it. This is usually an error, as pytest does not natively support it. This will turn into an error in pytest 9.
  See: https://docs.pytest.org/en/stable/deprecations.html#sync-test-depending-on-async-fixture
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_environment_info' requested async @pytest.fixture 'cleanup_after_test' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info
  c:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\pytest_asyncio\plugin.py:723: PytestDeprecationWarning: asyncio test 'test_environment_info' requested async @pytest.fixture 'tool_setup' in strict mode. You might want to use @pytest_asyncio.fixture or switch to auto mode. This will become an error in future versions of flake8-asyncio.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED symbolic_agi/tests/test_agent.py::TestAgent::test_agent_initialization
FAILED symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_state_initialization
FAILED symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_metacognitive_reflection
FAILED symbolic_agi/tests/test_consciousness.py::TestConsciousness::test_emotional_influence_on_decisions
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_fast
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_frustration_builds_on_repeated_rejection_integration
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_state_affects_planning
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_excitement_increases_with_success
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_regulation
FAILED symbolic_agi/tests/test_emotional_integration.py::TestEmotionalIntegration::test_emotional_decay_over_time
FAILED symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_trust_momentum_affects_agent_selection
FAILED symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_emotional_context_affects_ethical_evaluation
FAILED symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_execution_updates_emotional_state
FAILED symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_plan_failure_handling_with_emotional_regulation
FAILED symbolic_agi/tests/test_integration_complete.py::TestCompleteIntegration::test_complete_autonomous_cycle_with_integration
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_file_access_security
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_write_file_basic
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_sandboxed
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_execute_python_code_timeout
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_url_whitelist_enforcement
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browse_webpage_security
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_code_modification_requires_approval
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_create_skill_with_validation
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_data
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_explain_skill_integration
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_browser_operations_require_initialization
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_tool_initialization
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_list_directory
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_skill_details_not_found
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_path_traversal_prevention
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_symlink_protection
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_own_source_code
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_get_current_datetime
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_read_core_file_security
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_web_search_security
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_chain_of_thought_reasoning
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_analyze_self_capabilities
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_review_plan
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_craft_method
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_update_skill_not_found
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_knowledge_graph
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_provision_agent
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_show_monitoring_dashboard
FAILED symbolic_agi/tests/test_tool_plugin.py::TestToolPlugin::test_manage_web_access
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_read_file_security
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_write_file_creates_directories
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_timeout
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_execute_python_captures_output
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_api_request_methods
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_shell_command_security
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_list_directory
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_analyze_code_structure
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_search_in_files
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_git_operations
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_json_validation
FAILED symbolic_agi/tests/test_tool_plugin_comprehensive.py::TestToolPluginComprehensive::test_environment_info
ERROR symbolic_agi/tests/test_agent.py::TestAgent::test_browser_action - Type...
ERROR symbolic_agi/tests/test_agent.py::TestAgent::test_skill_review_efficiency
ERROR symbolic_agi/tests/test_agent.py::TestAgent::test_agent_with_invalid_skill
ERROR symbolic_agi/tests/test_integration.py::test_create_goal_via_api
====== 58 failed, 31 passed, 1 xfailed, 275 warnings, 4 errors in 3.82s =======
Task was destroyed but it is pending!
task: <Task pending name='Task-98' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<_OverlappedFuture cancelled>>
C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\_pytest\unraisableexception.py:67: PytestUnraisableExceptionWarning: Exception ignored in: <coroutine object RedisMessageBus._initialize at 0x000002018F1CDE00>

Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1141, in get_connection
    await self.ensure_connection(connection)
GeneratorExit

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py", line 31, in _initialize
    await self.redis_client.ping()
  File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\client.py", line 672, in execute_command
    conn = self.connection or await pool.get_connection()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\venv\Lib\site-packages\redis\asyncio\connection.py", line 1137, in get_connection
    async with self._lock:
               ^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 20, in __aexit__
    self.release()
  File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 137, in release
    self._wake_up_first()
  File "C:\Program Files\Python312\Lib\asyncio\locks.py", line 154, in _wake_up_first
    fut.set_result(True)
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed

Enable tracemalloc to get traceback where the object was allocated.
See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.
  warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))
Task was destroyed but it is pending!
task: <Task pending name='Task-100' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future finished result=True>>
Exception ignored in atexit callback: <bound method SymbolicAGI._sync_shutdown of <symbolic_agi.agi_controller.SymbolicAGI object at 0x000002018F75B050>>
Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 177, in _sync_shutdown
    asyncio.run(self.shutdown())
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 204, in shutdown
    await self.memory.shutdown()
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py", line 57, in shutdown
    self._flush_task.cancel()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
Exception ignored in atexit callback: <bound method SymbolicAGI._sync_shutdown of <symbolic_agi.agi_controller.SymbolicAGI object at 0x000002018F6E0800>>
Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 177, in _sync_shutdown
    asyncio.run(self.shutdown())
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 204, in shutdown
    await self.memory.shutdown()
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py", line 57, in shutdown
    self._flush_task.cancel()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
Exception ignored in atexit callback: <bound method SymbolicAGI._sync_shutdown of <symbolic_agi.agi_controller.SymbolicAGI object at 0x000002018F6C4CB0>>
Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 177, in _sync_shutdown
    asyncio.run(self.shutdown())
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 204, in shutdown
    await self.memory.shutdown()
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py", line 57, in shutdown
    self._flush_task.cancel()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
Exception ignored in atexit callback: <bound method SymbolicAGI._sync_shutdown of <symbolic_agi.agi_controller.SymbolicAGI object at 0x000002018F34DA60>>
Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 177, in _sync_shutdown
    asyncio.run(self.shutdown())
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 204, in shutdown
    await self.memory.shutdown()
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py", line 57, in shutdown
    self._flush_task.cancel()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
Exception ignored in atexit callback: <bound method SymbolicAGI._sync_shutdown of <symbolic_agi.agi_controller.SymbolicAGI object at 0x000002018F3314F0>>
Traceback (most recent call last):
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 177, in _sync_shutdown
    asyncio.run(self.shutdown())
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\agi_controller.py", line 204, in shutdown
    await self.memory.shutdown()
  File "C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py", line 57, in shutdown
    self._flush_task.cancel()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 794, in call_soon
    self._check_closed()
  File "C:\Program Files\Python312\Lib\asyncio\base_events.py", line 540, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task cancelling name='Task-35' coro=<SymbolicMemory._embed_daemon() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py:68> wait_for=<Future cancelled>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-37' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-39' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-41' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-43' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-45' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-40' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-42' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-44' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-52' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-54' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-56' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-58' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-50' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-53' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-55' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-57' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task cancelling name='Task-48' coro=<SymbolicMemory._embed_daemon() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py:68> wait_for=<Future cancelled>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task cancelling name='Task-4' coro=<SymbolicMemory._embed_daemon() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py:68> wait_for=<Future cancelled>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task cancelling name='Task-17' coro=<SymbolicMemory._embed_daemon() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py:68> wait_for=<Future cancelled>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-6' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-8' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-10' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-12' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-14' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-19' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-21' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-23' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-25' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-27' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-9' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-11' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-13' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-22' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-24' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-26' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-116' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-118' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-120' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-130' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-132' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-134' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task cancelling name='Task-97' coro=<SymbolicMemory._embed_daemon() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\symbolic_memory.py:68> wait_for=<Future cancelled>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-99' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-101' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-103' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-105' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-107' coro=<RedisMessageBus._listen() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:61> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-102' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-104' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
ERROR:asyncio:Task was destroyed but it is pending!
task: <Task pending name='Task-106' coro=<RedisMessageBus._initialize() running at C:\Users\Todd\Projects\symbolic_agi\symbolic_agi\message_bus.py:31> wait_for=<Future pending cb=[Task.task_wakeup()]>>
